// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  meals     Meal[]
}

model Meal {
  id         Int      @id @default(autoincrement())
  eatenAt    DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
  userId     Int

  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId Int

  @@index([userId, eatenAt])
  @@unique([userId, eatenAt])
}

model MenuItem {
  id           Int        @id @default(autoincrement())
  name         String
  price        Float

  meals        Meal[]

  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int

  category     Category   @relation(fields: [categoryId], references: [id])
  categoryId   Int

  @@index([restaurantId, categoryId])
  @@unique([name, restaurantId]) 
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String       @unique

  restaurants Restaurant[] @relation("RestaurantCategories")
  menuItems   MenuItem[]
}

model Restaurant {
  id         Int        @id @default(autoincrement())
  name       String     @unique

  menuItems  MenuItem[]

  location   Location   @relation(fields: [locationId], references: [id])
  locationId Int

  categories Category[] @relation("RestaurantCategories")
}

model Location {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  restaurants Restaurant[]
}
